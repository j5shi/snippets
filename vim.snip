snippet gui
	if has('gui_running')
		${1}
	endif

snippet if
	if ${1:#:condition}
		${0:TARGET}
	endif

snippet elseif
	elseif ${1:#:condition}
		${0:TARGET}

snippet ifelse
	if ${1:#:condition}
		${2:TARGET}
	else
		${3}
	endif

snippet     for
	for ${1:#:var} in ${2:#:list}
		${0:TARGET}
	endfor

snippet while
	while ${1:#:condition}
		${0:TARGET}
	endwhile

snippet     function
	function! ${1:#:func_name}(${2})
		${0:TARGET}
	endfunction

snippet try
	try
		${1:TARGET}
	catch /${2:#:pattern}/
		${3}
	endtry

snippet tryfinally
	try
		${1:TARGET}
	finally
		${2}
	endtry

snippet catch
	catch ${1:/${2:#:pattern: empty, E484, Vim(cmdname):{errmsg\\}\}/}

snippet echomsg
	echomsg string(${1:TARGET})

snippet command
	command! ${1:#:command_name} call ${2:#:func_name}

snippet customlist
	function! ${1:#:func_name}(arglead, cmdline, cursorpos)
		return filter(${2:#:list}, 'stridx(v:val, a:arglead) == 0')
	endfunction

snippet augroup
	augroup ${1:#:augroup_name}
		autocmd!
		autocmd ${2:#:event}
	augroup END

snippet modeline
	" vim: ${0:foldmethod=marker}

snippet python
	python << EOF
	${0}
	EOF

snippet python3
	python3 << EOF
	${0}
	EOF

snippet lua
	lua << EOF
	${0}
	EOF

snippet save_pos
	let pos_save = getpos('.')
	try
		${0}
	finally
		call setpos('.', pos_save)
	endtry

snippet save_register
	let save_reg_$1 = getreg('${1}')
	let save_regtype_$1 = getregtype('$1')
	try
		${0}
	finally
		call setreg('$1', save_reg_$1, save_regtype_$1)
	endtry

snippet save_option
	let $1_save = &${1}
	let &$1 = ${2}
	try
		${0}
	finally
		let &$1 = $1_save
	endtry

snippet echomsg
	echomsg string([${0:TARGET}])

snippet vim_version_test
	v:version > ${1} || (v:version == $1 && has('patch${2}'))

snippet vim_patch_test
	has('patch-${1}')

